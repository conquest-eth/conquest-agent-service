{
  "name": "conquest-eth",
  "version": "0.0.1",
  "description": "conquest.eth",
  "private": true,
  "devDependencies": {
    "change-name": "^0.2.6",
    "cross-env": "^7.0.2",
    "cross-var": "^1.1.0",
    "dotenv-cli": "^3.1.0",
    "npm-run-all": "^4.1.5",
    "rimraf": "^3.0.2",
    "svelte": "^3.37.0",
    "wait-on": "^5.1.0",
    "wighawag_newsh": "0.0.6"
  },
  "pnpm": {
    "overrides": {
      "aes-js": "https://github.com/wighawag/aes-js#ddcec7d95eb5608c4fe023f9f035b7e469b50809"
    }
  },
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "setup": "npx change-name conquest-eth && pnpm install",
    "set-name": "npx change-name conquest-eth",
    "prepare": "node ./.setup.js",
    "----------------------------------------------": "",
    "// externals : Setup external services locally (ethereum node, thegraph)": "",
    "stop": "run-s externals:down",
    "externals:down": "docker-compose down -v",
    "docker-compose": "dotenv -e .env -e contracts/.env -- docker-compose up",
    "externals:up": "run-p docker-compose contracts:fundingFromCoinbase",
    "shell:externals:up": "newsh \"npm run externals:up\"",
    "-----------------------------------------------": "",
    "// common lib: ensure it is compiled": "",
    "common:dev": "npm --prefix common-lib run dev",
    "shell:common": "newsh \"npm run common:dev\"",
    "common:build": "npm --prefix common-lib run build",
    "------------------------------------------------": "",
    "// contracts : deploy smart contracts on local ethereum node": "",
    "contracts:clean": "rimraf contracts/deployments/localhost && rimraf web/src/lib/contracts.json",
    "contracts": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run local:dev -- --export ../web/src/lib/contracts.json",
    "shell:contracts": "newsh \"npm run contracts\"",
    "contracts:deploy": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run deploy localhost -- --export ../web/src/lib/contracts.json",
    "contracts:export": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run export localhost -- ../web/src/lib/contracts.json",
    "contracts:fundingFromCoinbase": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run execute localhost scripts/fundingFromCoinbase.ts",
    "seed": "wait-on web/src/lib/contracts.json && dotenv -e .env -e contracts/.env -- npm --prefix contracts run execute localhost scripts/seed.ts",
    "seed:build": "run-s common:build seed",
    "contracts:node": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run dev -- --export ../web/src/lib/contracts.json",
    "shell:contracts:node": "newsh \"npm run contracts:node\"",
    "localhost:claimKeys": "dotenv -e .env -- npm --prefix contracts run execute localhost scripts/generate_claim_keys.ts",
    "-------------------------------------------------": "",
    "// subgraphs : generate and deploy local subgraph": "",
    "subgraph": "wait-on web/src/lib/contracts.json && dotenv -- npm --prefix subgraph run dev ../contracts/deployments/localhost mainnet",
    "shell:subgraph": "newsh \"npm run subgraph\"",
    "subgraph:setup": "dotenv -- npm --prefix subgraph run setup",
    "subgraph:deploy": "wait-on web/src/lib/contracts.json && dotenv -- npm --prefix subgraph run deploy ../contracts/deployments/localhost mainnet",
    "--------------------------------------------------": "",
    "// web : build and serve the web app": "",
    "web": "dotenv -- npm --prefix web run dev",
    "shell:web": "newsh \"npm run web\"",
    "web:build": "run-s web:prepare contracts:export web:rebuild",
    "web:rebuild": "dotenv -- npm --prefix web run build",
    "web:serve": "dotenv -- npm --prefix web run serve --",
    "web:build:serve": "run-s web:build web:serve",
    "web:prepare": "dotenv -- npm --prefix web run prepare",
    "---------------------------------------------------": "",
    "// STAGING : deploy on staging": "",
    "staging:web:dev": "dotenv -e .env.staging -e .env -- npm --prefix web run dev",
    "staging:web:build": "run-s web:prepare staging:contracts:export common:build staging:web:rebuild",
    "staging:web:build:serve": "run-s staging:web:build web:serve",
    "staging:web:rebuild": "dotenv -e .env.staging -e .env -- npm --prefix web run build",
    "staging:web:deploy": "dotenv -e .env.staging -e .env -- npm --prefix web run deploy",
    "staging:seed": "dotenv -e .env.staging -e .env -- npm --prefix contracts run execute staging scripts/seed.ts",
    "staging:contracts:export": "dotenv -e .env.staging -e .env -- npm --prefix contracts run export staging -- ../web/src/lib/contracts.json",
    "staging:contracts": "dotenv -e .env.staging -e .env -- npm --prefix contracts run deploy staging -- --export ../web/src/lib/contracts.json",
    "staging:subgraph": "dotenv -e .env.staging -e .env -- npm --prefix subgraph run hosted:deploy ../contracts/deployments/staging goerli",
    "staging:web": "run-s staging:web:build staging:web:deploy",
    "staging": "run-s staging:contracts staging:subgraph web:prepare common:build staging:web:rebuild staging:web:deploy",
    "staging:reset": "rimraf contracts/deployments/staging && run-s staging:contracts staging:subgraph web:prepare common:build staging:web:rebuild staging:web:deploy",
    "staging:claimKeys": "dotenv -e .env.staging -e .env -- npm --prefix contracts run execute staging scripts/generate_claim_keys.ts",
    "staging:claimKeysURL": "dotenv -e .env.staging -e .env -- npm --prefix contracts run execute staging scripts/updateURLForClaimKeys.ts",
    "staging:execute": "dotenv -e .env.staging -e .env -- npm --prefix contracts run execute staging",
    "-----------------------------------": "",
    "// ALPHA : deploy on alpha": "",
    "alpha:web:dev": "dotenv -e .env.alpha -e .env -- npm --prefix web run dev",
    "alpha:web:build": "run-s web:prepare alpha:contracts:export common:build alpha:web:rebuild",
    "alpha:web:build:serve": "run-s alpha:web:build web:serve",
    "alpha:web:rebuild": "dotenv -e .env.alpha -e .env -- npm --prefix web run build",
    "alpha:web:deploy": "dotenv -e .env.alpha -e .env -- npm --prefix web run deploy",
    "alpha:seed": "dotenv -e .env.alpha -e .env -- npm --prefix contracts run execute alpha scripts/seed.ts",
    "alpha:contracts:export": "dotenv -e .env.alpha -e .env -- npm --prefix contracts run export alpha -- ../web/src/lib/contracts.json",
    "alpha:contracts": "dotenv -e .env.alpha -e .env -- npm --prefix contracts run deploy alpha -- --export ../web/src/lib/contracts.json",
    "alpha:subgraph": "dotenv -e .env.alpha -e .env -- npm --prefix subgraph run hosted:deploy ../contracts/deployments/alpha goerli",
    "alpha:web": "run-s alpha:web:build alpha:web:deploy",
    "alpha": "run-s alpha:contracts alpha:subgraph web:prepare common:build alpha:web:rebuild alpha:web:deploy",
    "alpha:reset": "rimraf contracts/deployments/alpha && run-s alpha:contracts alpha:subgraph web:prepare common:build alpha:web:rebuild alpha:web:deploy",
    "alpha:claimKeys": "dotenv -e .env.alpha -e .env -- npm --prefix contracts run execute alpha scripts/generate_claim_keys.ts",
    "alpha:claimKeysURL": "dotenv -e .env.alpha -e .env -- npm --prefix contracts run execute alpha scripts/updateURLForClaimKeys.ts",
    "alpha:execute": "dotenv -e .env.alpha -e .env -- npm --prefix contracts run execute alpha",
    "-----------------------------": "",
    "// QUICK : deploy on quick": "",
    "quick:web:dev": "dotenv -e .env.quick -e .env -- npm --prefix web run dev",
    "quick:web:build": "run-s web:prepare quick:contracts:export common:build quick:web:rebuild",
    "quick:web:build:serve": "run-s quick:web:build web:serve",
    "quick:web:rebuild": "dotenv -e .env.quick -e .env -- npm --prefix web run build",
    "quick:web:deploy": "dotenv -e .env.quick -e .env -- npm --prefix web run deploy",
    "quick:seed": "dotenv -e .env.quick -e .env -- npm --prefix contracts run execute quick scripts/seed.ts",
    "quick:contracts:export": "dotenv -e .env.quick -e .env -- npm --prefix contracts run export quick -- ../web/src/lib/contracts.json",
    "quick:contracts": "dotenv -e .env.quick -e .env -- npm --prefix contracts run deploy quick -- --export ../web/src/lib/contracts.json",
    "quick:subgraph": "dotenv -e .env.quick -e .env -- npm --prefix subgraph run hosted:deploy ../contracts/deployments/quick goerli",
    "quick:web": "run-s quick:web:build quick:web:deploy",
    "quick": "run-s quick:contracts quick:subgraph web:prepare common:build quick:web:rebuild quick:web:deploy",
    "quick:reset": "rimraf contracts/deployments/quick && run-s quick:contracts quick:subgraph web:prepare common:build quick:web:rebuild quick:web:deploy",
    "quick:claimKeys": "dotenv -e .env.quick -e .env -- npm --prefix contracts run execute quick scripts/generate_claim_keys.ts",
    "----------------------------------------------------": "",
    "// PRODUCTION : build on mainnet": "",
    "production:web:dev": "dotenv -e .env.production -e .env -- npm --prefix web run dev",
    "production:web:build": "run-s web:prepare production:contracts:export common:build production:web:rebuild",
    "production:web:build:serve": "run-s production:web:build web:serve",
    "production:web:rebuild": "dotenv -e .env.production -e .env -- npm --prefix web run build",
    "production:web:deploy": "dotenv -e .env.production -e .env -- npm --prefix web run deploy",
    "production:contracts:export": "dotenv -e .env.production -e .env -- npm --prefix contracts run export production -- ../web/src/lib/contracts.json",
    "production:contracts": "dotenv -e .env.production -e .env -- npm --prefix contracts run deploy production -- --export ../web/src/lib/contracts.json",
    "production:subgraph": "dotenv -e .env.production -e .env -- npm --prefix subgraph run hosted:deploy ../contracts/deployments/production production",
    "production:web": "run-s production:web:build production:web:deploy",
    "production": "run-s production:contracts production:subgraph web:prepare common:build production:web:rebuild production:web:deploy",
    "production:reset": "rimraf contracts/deployments/production && run-s production:contracts production:subgraph web:prepare common:build production:web:rebuild production:web:deploy",
    "-----------------------------------------------------": "",
    "// START : local development setup": "This setup external service, setup subgraph and deploy it on the local graph-node, deploy the contracts and seed it",
    "externals": "npm-run-all -l externals:down --parallel externals:up",
    "start": "npm-run-all -l externals:down --parallel shell:common shell:web shell:externals:up --sequential common:build subgraph:setup contracts:clean shell:contracts shell:subgraph seed",
    "dev": "npm-run-all -l --parallel shell:common shell:web --sequential common:build subgraph:setup contracts:clean shell:contracts shell:subgraph seed",
    "reconnect:no-graph": "npm-run-all -l --parallel shell:common shell:web --sequential common:build shell:contracts",
    "reconnect": "npm-run-all -l --parallel shell:common shell:web --sequential common:build subgraph:setup shell:contracts shell:subgraph",
    "start:no-graph": "npm-run-all -l --parallel shell:common shell:web --sequential common:build contracts:clean shell:contracts seed",
    "------------------------------------------------------": "",
    "auto:web:build": "cross-var npm run $NETWORK_NAME:web:build"
  }
}
