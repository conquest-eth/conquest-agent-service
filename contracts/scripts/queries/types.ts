export type PlayerData = {
  id: string;
  planets: {id: string}[];
  totalStaked: string;
  currentStake: string;
  totalCollected: string;
  playTokenBalance: string;
  playTokenToWithdraw: string;
  playTokenGiven: string;
  introducer: {id: string};
  stake_gas: string;
  stake_num: string;
  sending_gas: string;
  sending_num: string;
  resolving_gas: string;
  resolving_num: string;
  exit_attempt_gas: string;
  exit_attempt_num: string;
  spaceships_sent: string;
  spaceships_arrived: string;
  spaceships_self_transfered: string;
  gift_spaceships_sent: string;
  gift_spaceships_receieved: string;
  attack_own_spaceships_destroyed: string;
  attack_enemy_spaceships_destroyed: string;
  defense_own_spaceships_destroyed: string;
  defense_enemy_spaceships_destroyed: string;
  planets_conquered: string;
  planets_lost: string;
};
export type BlockData<T = PlayerData> = {blockNumber: number; players: T[]};

export type PlayerStats = {
  id: string;
  planets: {id: string}[];
  total: number;
  score: number;
  totalStaked: number;
  currentStake: number;
  totalCollected: number;
  playTokenBalance: number;
  playTokenToWithdraw: number;
  playTokenGiven: number;
  introducer: {id: string};
  stake_gas: number;
  stake_num: number;
  sending_gas: number;
  sending_num: number;
  resolving_gas: number;
  resolving_num: number;
  exit_attempt_gas: number;
  exit_attempt_num: number;
  spaceships_sent: number;
  spaceships_arrived: number;
  spaceships_self_transfered: number;
  gift_spaceships_sent: number;
  gift_spaceships_receieved: number;
  attack_own_spaceships_destroyed: number;
  attack_enemy_spaceships_destroyed: number;
  defense_own_spaceships_destroyed: number;
  defense_enemy_spaceships_destroyed: number;
  planets_conquered: number;
  planets_lost: number;
};
